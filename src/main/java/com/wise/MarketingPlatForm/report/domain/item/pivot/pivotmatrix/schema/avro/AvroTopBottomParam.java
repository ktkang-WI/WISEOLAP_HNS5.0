/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroTopBottomParam extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8493906820061435214L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroTopBottomParam\",\"namespace\":\"com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro\",\"fields\":[{\"name\":\"dataFieldName\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"applyFieldName\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"topBottomType\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"topBottomCount\",\"type\":\"int\"},{\"name\":\"inPercent\",\"type\":[\"boolean\",\"null\"]},{\"name\":\"showOthers\",\"type\":[\"boolean\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroTopBottomParam> ENCODER =
      new BinaryMessageEncoder<AvroTopBottomParam>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroTopBottomParam> DECODER =
      new BinaryMessageDecoder<AvroTopBottomParam>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroTopBottomParam> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroTopBottomParam> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroTopBottomParam>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroTopBottomParam to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroTopBottomParam from a ByteBuffer. */
  public static AvroTopBottomParam fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String dataFieldName;
  @Deprecated public java.lang.String applyFieldName;
  @Deprecated public java.lang.String topBottomType;
  @Deprecated public int topBottomCount;
  @Deprecated public java.lang.Boolean inPercent;
  @Deprecated public java.lang.Boolean showOthers;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroTopBottomParam() {}

  /**
   * All-args constructor.
   * @param dataFieldName The new value for dataFieldName
   * @param applyFieldName The new value for applyFieldName
   * @param topBottomType The new value for topBottomType
   * @param topBottomCount The new value for topBottomCount
   * @param inPercent The new value for inPercent
   * @param showOthers The new value for showOthers
   */
  public AvroTopBottomParam(java.lang.String dataFieldName, java.lang.String applyFieldName, java.lang.String topBottomType, java.lang.Integer topBottomCount, java.lang.Boolean inPercent, java.lang.Boolean showOthers) {
    this.dataFieldName = dataFieldName;
    this.applyFieldName = applyFieldName;
    this.topBottomType = topBottomType;
    this.topBottomCount = topBottomCount;
    this.inPercent = inPercent;
    this.showOthers = showOthers;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return dataFieldName;
    case 1: return applyFieldName;
    case 2: return topBottomType;
    case 3: return topBottomCount;
    case 4: return inPercent;
    case 5: return showOthers;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: dataFieldName = (java.lang.String)value$; break;
    case 1: applyFieldName = (java.lang.String)value$; break;
    case 2: topBottomType = (java.lang.String)value$; break;
    case 3: topBottomCount = (java.lang.Integer)value$; break;
    case 4: inPercent = (java.lang.Boolean)value$; break;
    case 5: showOthers = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'dataFieldName' field.
   * @return The value of the 'dataFieldName' field.
   */
  public java.lang.String getDataFieldName() {
    return dataFieldName;
  }

  /**
   * Sets the value of the 'dataFieldName' field.
   * @param value the value to set.
   */
  public void setDataFieldName(java.lang.String value) {
    this.dataFieldName = value;
  }

  /**
   * Gets the value of the 'applyFieldName' field.
   * @return The value of the 'applyFieldName' field.
   */
  public java.lang.String getApplyFieldName() {
    return applyFieldName;
  }

  /**
   * Sets the value of the 'applyFieldName' field.
   * @param value the value to set.
   */
  public void setApplyFieldName(java.lang.String value) {
    this.applyFieldName = value;
  }

  /**
   * Gets the value of the 'topBottomType' field.
   * @return The value of the 'topBottomType' field.
   */
  public java.lang.String getTopBottomType() {
    return topBottomType;
  }

  /**
   * Sets the value of the 'topBottomType' field.
   * @param value the value to set.
   */
  public void setTopBottomType(java.lang.String value) {
    this.topBottomType = value;
  }

  /**
   * Gets the value of the 'topBottomCount' field.
   * @return The value of the 'topBottomCount' field.
   */
  public java.lang.Integer getTopBottomCount() {
    return topBottomCount;
  }

  /**
   * Sets the value of the 'topBottomCount' field.
   * @param value the value to set.
   */
  public void setTopBottomCount(java.lang.Integer value) {
    this.topBottomCount = value;
  }

  /**
   * Gets the value of the 'inPercent' field.
   * @return The value of the 'inPercent' field.
   */
  public java.lang.Boolean getInPercent() {
    return inPercent;
  }

  /**
   * Sets the value of the 'inPercent' field.
   * @param value the value to set.
   */
  public void setInPercent(java.lang.Boolean value) {
    this.inPercent = value;
  }

  /**
   * Gets the value of the 'showOthers' field.
   * @return The value of the 'showOthers' field.
   */
  public java.lang.Boolean getShowOthers() {
    return showOthers;
  }

  /**
   * Sets the value of the 'showOthers' field.
   * @param value the value to set.
   */
  public void setShowOthers(java.lang.Boolean value) {
    this.showOthers = value;
  }

  /**
   * Creates a new AvroTopBottomParam RecordBuilder.
   * @return A new AvroTopBottomParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder newBuilder() {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder();
  }

  /**
   * Creates a new AvroTopBottomParam RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroTopBottomParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder(other);
  }

  /**
   * Creates a new AvroTopBottomParam RecordBuilder by copying an existing AvroTopBottomParam instance.
   * @param other The existing instance to copy.
   * @return A new AvroTopBottomParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder(other);
  }

  /**
   * RecordBuilder for AvroTopBottomParam instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroTopBottomParam>
    implements org.apache.avro.data.RecordBuilder<AvroTopBottomParam> {

    private java.lang.String dataFieldName;
    private java.lang.String applyFieldName;
    private java.lang.String topBottomType;
    private int topBottomCount;
    private java.lang.Boolean inPercent;
    private java.lang.Boolean showOthers;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.dataFieldName)) {
        this.dataFieldName = data().deepCopy(fields()[0].schema(), other.dataFieldName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applyFieldName)) {
        this.applyFieldName = data().deepCopy(fields()[1].schema(), other.applyFieldName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.topBottomType)) {
        this.topBottomType = data().deepCopy(fields()[2].schema(), other.topBottomType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.topBottomCount)) {
        this.topBottomCount = data().deepCopy(fields()[3].schema(), other.topBottomCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.inPercent)) {
        this.inPercent = data().deepCopy(fields()[4].schema(), other.inPercent);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.showOthers)) {
        this.showOthers = data().deepCopy(fields()[5].schema(), other.showOthers);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroTopBottomParam instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.dataFieldName)) {
        this.dataFieldName = data().deepCopy(fields()[0].schema(), other.dataFieldName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.applyFieldName)) {
        this.applyFieldName = data().deepCopy(fields()[1].schema(), other.applyFieldName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.topBottomType)) {
        this.topBottomType = data().deepCopy(fields()[2].schema(), other.topBottomType);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.topBottomCount)) {
        this.topBottomCount = data().deepCopy(fields()[3].schema(), other.topBottomCount);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.inPercent)) {
        this.inPercent = data().deepCopy(fields()[4].schema(), other.inPercent);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.showOthers)) {
        this.showOthers = data().deepCopy(fields()[5].schema(), other.showOthers);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'dataFieldName' field.
      * @return The value.
      */
    public java.lang.String getDataFieldName() {
      return dataFieldName;
    }

    /**
      * Sets the value of the 'dataFieldName' field.
      * @param value The value of 'dataFieldName'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setDataFieldName(java.lang.String value) {
      validate(fields()[0], value);
      this.dataFieldName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'dataFieldName' field has been set.
      * @return True if the 'dataFieldName' field has been set, false otherwise.
      */
    public boolean hasDataFieldName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'dataFieldName' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearDataFieldName() {
      dataFieldName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'applyFieldName' field.
      * @return The value.
      */
    public java.lang.String getApplyFieldName() {
      return applyFieldName;
    }

    /**
      * Sets the value of the 'applyFieldName' field.
      * @param value The value of 'applyFieldName'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setApplyFieldName(java.lang.String value) {
      validate(fields()[1], value);
      this.applyFieldName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'applyFieldName' field has been set.
      * @return True if the 'applyFieldName' field has been set, false otherwise.
      */
    public boolean hasApplyFieldName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'applyFieldName' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearApplyFieldName() {
      applyFieldName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'topBottomType' field.
      * @return The value.
      */
    public java.lang.String getTopBottomType() {
      return topBottomType;
    }

    /**
      * Sets the value of the 'topBottomType' field.
      * @param value The value of 'topBottomType'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setTopBottomType(java.lang.String value) {
      validate(fields()[2], value);
      this.topBottomType = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'topBottomType' field has been set.
      * @return True if the 'topBottomType' field has been set, false otherwise.
      */
    public boolean hasTopBottomType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'topBottomType' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearTopBottomType() {
      topBottomType = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'topBottomCount' field.
      * @return The value.
      */
    public java.lang.Integer getTopBottomCount() {
      return topBottomCount;
    }

    /**
      * Sets the value of the 'topBottomCount' field.
      * @param value The value of 'topBottomCount'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setTopBottomCount(int value) {
      validate(fields()[3], value);
      this.topBottomCount = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'topBottomCount' field has been set.
      * @return True if the 'topBottomCount' field has been set, false otherwise.
      */
    public boolean hasTopBottomCount() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'topBottomCount' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearTopBottomCount() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'inPercent' field.
      * @return The value.
      */
    public java.lang.Boolean getInPercent() {
      return inPercent;
    }

    /**
      * Sets the value of the 'inPercent' field.
      * @param value The value of 'inPercent'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setInPercent(java.lang.Boolean value) {
      validate(fields()[4], value);
      this.inPercent = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'inPercent' field has been set.
      * @return True if the 'inPercent' field has been set, false otherwise.
      */
    public boolean hasInPercent() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'inPercent' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearInPercent() {
      inPercent = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'showOthers' field.
      * @return The value.
      */
    public java.lang.Boolean getShowOthers() {
      return showOthers;
    }

    /**
      * Sets the value of the 'showOthers' field.
      * @param value The value of 'showOthers'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder setShowOthers(java.lang.Boolean value) {
      validate(fields()[5], value);
      this.showOthers = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'showOthers' field has been set.
      * @return True if the 'showOthers' field has been set, false otherwise.
      */
    public boolean hasShowOthers() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'showOthers' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroTopBottomParam.Builder clearShowOthers() {
      showOthers = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroTopBottomParam build() {
      try {
        AvroTopBottomParam record = new AvroTopBottomParam();
        record.dataFieldName = fieldSetFlags()[0] ? this.dataFieldName : (java.lang.String) defaultValue(fields()[0]);
        record.applyFieldName = fieldSetFlags()[1] ? this.applyFieldName : (java.lang.String) defaultValue(fields()[1]);
        record.topBottomType = fieldSetFlags()[2] ? this.topBottomType : (java.lang.String) defaultValue(fields()[2]);
        record.topBottomCount = fieldSetFlags()[3] ? this.topBottomCount : (java.lang.Integer) defaultValue(fields()[3]);
        record.inPercent = fieldSetFlags()[4] ? this.inPercent : (java.lang.Boolean) defaultValue(fields()[4]);
        record.showOthers = fieldSetFlags()[5] ? this.showOthers : (java.lang.Boolean) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroTopBottomParam>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroTopBottomParam>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroTopBottomParam>
    READER$ = (org.apache.avro.io.DatumReader<AvroTopBottomParam>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
