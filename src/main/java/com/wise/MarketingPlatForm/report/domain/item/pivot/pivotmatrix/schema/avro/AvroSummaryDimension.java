/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroSummaryDimension extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2221915226083168381L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroSummaryDimension\",\"namespace\":\"com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro\",\"fields\":[{\"name\":\"childDataGroupKey\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"key\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"depth\",\"type\":\"int\"},{\"name\":\"path\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"parentPath\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"children\",\"type\":{\"type\":\"array\",\"items\":\"AvroSummaryDimension\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroSummaryDimension> ENCODER =
      new BinaryMessageEncoder<AvroSummaryDimension>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroSummaryDimension> DECODER =
      new BinaryMessageDecoder<AvroSummaryDimension>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroSummaryDimension> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroSummaryDimension> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroSummaryDimension>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroSummaryDimension to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroSummaryDimension from a ByteBuffer. */
  public static AvroSummaryDimension fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String childDataGroupKey;
  @Deprecated public java.lang.String key;
  @Deprecated public int depth;
  @Deprecated public java.lang.String path;
  @Deprecated public java.lang.String parentPath;
  @Deprecated public java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> children;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroSummaryDimension() {}

  /**
   * All-args constructor.
   * @param childDataGroupKey The new value for childDataGroupKey
   * @param key The new value for key
   * @param depth The new value for depth
   * @param path The new value for path
   * @param parentPath The new value for parentPath
   * @param children The new value for children
   */
  public AvroSummaryDimension(java.lang.String childDataGroupKey, java.lang.String key, java.lang.Integer depth, java.lang.String path, java.lang.String parentPath, java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> children) {
    this.childDataGroupKey = childDataGroupKey;
    this.key = key;
    this.depth = depth;
    this.path = path;
    this.parentPath = parentPath;
    this.children = children;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return childDataGroupKey;
    case 1: return key;
    case 2: return depth;
    case 3: return path;
    case 4: return parentPath;
    case 5: return children;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: childDataGroupKey = (java.lang.String)value$; break;
    case 1: key = (java.lang.String)value$; break;
    case 2: depth = (java.lang.Integer)value$; break;
    case 3: path = (java.lang.String)value$; break;
    case 4: parentPath = (java.lang.String)value$; break;
    case 5: children = (java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'childDataGroupKey' field.
   * @return The value of the 'childDataGroupKey' field.
   */
  public java.lang.String getChildDataGroupKey() {
    return childDataGroupKey;
  }

  /**
   * Sets the value of the 'childDataGroupKey' field.
   * @param value the value to set.
   */
  public void setChildDataGroupKey(java.lang.String value) {
    this.childDataGroupKey = value;
  }

  /**
   * Gets the value of the 'key' field.
   * @return The value of the 'key' field.
   */
  public java.lang.String getKey() {
    return key;
  }

  /**
   * Sets the value of the 'key' field.
   * @param value the value to set.
   */
  public void setKey(java.lang.String value) {
    this.key = value;
  }

  /**
   * Gets the value of the 'depth' field.
   * @return The value of the 'depth' field.
   */
  public java.lang.Integer getDepth() {
    return depth;
  }

  /**
   * Sets the value of the 'depth' field.
   * @param value the value to set.
   */
  public void setDepth(java.lang.Integer value) {
    this.depth = value;
  }

  /**
   * Gets the value of the 'path' field.
   * @return The value of the 'path' field.
   */
  public java.lang.String getPath() {
    return path;
  }

  /**
   * Sets the value of the 'path' field.
   * @param value the value to set.
   */
  public void setPath(java.lang.String value) {
    this.path = value;
  }

  /**
   * Gets the value of the 'parentPath' field.
   * @return The value of the 'parentPath' field.
   */
  public java.lang.String getParentPath() {
    return parentPath;
  }

  /**
   * Sets the value of the 'parentPath' field.
   * @param value the value to set.
   */
  public void setParentPath(java.lang.String value) {
    this.parentPath = value;
  }

  /**
   * Gets the value of the 'children' field.
   * @return The value of the 'children' field.
   */
  public java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> getChildren() {
    return children;
  }

  /**
   * Sets the value of the 'children' field.
   * @param value the value to set.
   */
  public void setChildren(java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> value) {
    this.children = value;
  }

  /**
   * Creates a new AvroSummaryDimension RecordBuilder.
   * @return A new AvroSummaryDimension RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder newBuilder() {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder();
  }

  /**
   * Creates a new AvroSummaryDimension RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroSummaryDimension RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder(other);
  }

  /**
   * Creates a new AvroSummaryDimension RecordBuilder by copying an existing AvroSummaryDimension instance.
   * @param other The existing instance to copy.
   * @return A new AvroSummaryDimension RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder(other);
  }

  /**
   * RecordBuilder for AvroSummaryDimension instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroSummaryDimension>
    implements org.apache.avro.data.RecordBuilder<AvroSummaryDimension> {

    private java.lang.String childDataGroupKey;
    private java.lang.String key;
    private int depth;
    private java.lang.String path;
    private java.lang.String parentPath;
    private java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> children;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.childDataGroupKey)) {
        this.childDataGroupKey = data().deepCopy(fields()[0].schema(), other.childDataGroupKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depth)) {
        this.depth = data().deepCopy(fields()[2].schema(), other.depth);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.path)) {
        this.path = data().deepCopy(fields()[3].schema(), other.path);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.parentPath)) {
        this.parentPath = data().deepCopy(fields()[4].schema(), other.parentPath);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.children)) {
        this.children = data().deepCopy(fields()[5].schema(), other.children);
        fieldSetFlags()[5] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroSummaryDimension instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.childDataGroupKey)) {
        this.childDataGroupKey = data().deepCopy(fields()[0].schema(), other.childDataGroupKey);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.key)) {
        this.key = data().deepCopy(fields()[1].schema(), other.key);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.depth)) {
        this.depth = data().deepCopy(fields()[2].schema(), other.depth);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.path)) {
        this.path = data().deepCopy(fields()[3].schema(), other.path);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.parentPath)) {
        this.parentPath = data().deepCopy(fields()[4].schema(), other.parentPath);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.children)) {
        this.children = data().deepCopy(fields()[5].schema(), other.children);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'childDataGroupKey' field.
      * @return The value.
      */
    public java.lang.String getChildDataGroupKey() {
      return childDataGroupKey;
    }

    /**
      * Sets the value of the 'childDataGroupKey' field.
      * @param value The value of 'childDataGroupKey'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setChildDataGroupKey(java.lang.String value) {
      validate(fields()[0], value);
      this.childDataGroupKey = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'childDataGroupKey' field has been set.
      * @return True if the 'childDataGroupKey' field has been set, false otherwise.
      */
    public boolean hasChildDataGroupKey() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'childDataGroupKey' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearChildDataGroupKey() {
      childDataGroupKey = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'key' field.
      * @return The value.
      */
    public java.lang.String getKey() {
      return key;
    }

    /**
      * Sets the value of the 'key' field.
      * @param value The value of 'key'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setKey(java.lang.String value) {
      validate(fields()[1], value);
      this.key = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'key' field has been set.
      * @return True if the 'key' field has been set, false otherwise.
      */
    public boolean hasKey() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'key' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearKey() {
      key = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'depth' field.
      * @return The value.
      */
    public java.lang.Integer getDepth() {
      return depth;
    }

    /**
      * Sets the value of the 'depth' field.
      * @param value The value of 'depth'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setDepth(int value) {
      validate(fields()[2], value);
      this.depth = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'depth' field has been set.
      * @return True if the 'depth' field has been set, false otherwise.
      */
    public boolean hasDepth() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'depth' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearDepth() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'path' field.
      * @return The value.
      */
    public java.lang.String getPath() {
      return path;
    }

    /**
      * Sets the value of the 'path' field.
      * @param value The value of 'path'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setPath(java.lang.String value) {
      validate(fields()[3], value);
      this.path = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'path' field has been set.
      * @return True if the 'path' field has been set, false otherwise.
      */
    public boolean hasPath() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'path' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearPath() {
      path = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentPath' field.
      * @return The value.
      */
    public java.lang.String getParentPath() {
      return parentPath;
    }

    /**
      * Sets the value of the 'parentPath' field.
      * @param value The value of 'parentPath'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setParentPath(java.lang.String value) {
      validate(fields()[4], value);
      this.parentPath = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'parentPath' field has been set.
      * @return True if the 'parentPath' field has been set, false otherwise.
      */
    public boolean hasParentPath() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'parentPath' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearParentPath() {
      parentPath = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'children' field.
      * @return The value.
      */
    public java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> getChildren() {
      return children;
    }

    /**
      * Sets the value of the 'children' field.
      * @param value The value of 'children'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder setChildren(java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension> value) {
      validate(fields()[5], value);
      this.children = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'children' field has been set.
      * @return True if the 'children' field has been set, false otherwise.
      */
    public boolean hasChildren() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'children' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension.Builder clearChildren() {
      children = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroSummaryDimension build() {
      try {
        AvroSummaryDimension record = new AvroSummaryDimension();
        record.childDataGroupKey = fieldSetFlags()[0] ? this.childDataGroupKey : (java.lang.String) defaultValue(fields()[0]);
        record.key = fieldSetFlags()[1] ? this.key : (java.lang.String) defaultValue(fields()[1]);
        record.depth = fieldSetFlags()[2] ? this.depth : (java.lang.Integer) defaultValue(fields()[2]);
        record.path = fieldSetFlags()[3] ? this.path : (java.lang.String) defaultValue(fields()[3]);
        record.parentPath = fieldSetFlags()[4] ? this.parentPath : (java.lang.String) defaultValue(fields()[4]);
        record.children = fieldSetFlags()[5] ? this.children : (java.util.List<com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSummaryDimension>) defaultValue(fields()[5]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroSummaryDimension>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroSummaryDimension>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroSummaryDimension>
    READER$ = (org.apache.avro.io.DatumReader<AvroSummaryDimension>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
