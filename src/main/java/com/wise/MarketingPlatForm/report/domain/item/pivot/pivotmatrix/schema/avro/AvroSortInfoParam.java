/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroSortInfoParam extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2783146569468300613L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroSortInfoParam\",\"namespace\":\"com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro\",\"fields\":[{\"name\":\"sortOrder\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"dataField\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"sortByField\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroSortInfoParam> ENCODER =
      new BinaryMessageEncoder<AvroSortInfoParam>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroSortInfoParam> DECODER =
      new BinaryMessageDecoder<AvroSortInfoParam>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroSortInfoParam> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroSortInfoParam> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroSortInfoParam>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroSortInfoParam to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroSortInfoParam from a ByteBuffer. */
  public static AvroSortInfoParam fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String sortOrder;
  @Deprecated public java.lang.String dataField;
  @Deprecated public java.lang.String sortByField;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroSortInfoParam() {}

  /**
   * All-args constructor.
   * @param sortOrder The new value for sortOrder
   * @param dataField The new value for dataField
   * @param sortByField The new value for sortByField
   */
  public AvroSortInfoParam(java.lang.String sortOrder, java.lang.String dataField, java.lang.String sortByField) {
    this.sortOrder = sortOrder;
    this.dataField = dataField;
    this.sortByField = sortByField;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sortOrder;
    case 1: return dataField;
    case 2: return sortByField;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sortOrder = (java.lang.String)value$; break;
    case 1: dataField = (java.lang.String)value$; break;
    case 2: sortByField = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sortOrder' field.
   * @return The value of the 'sortOrder' field.
   */
  public java.lang.String getSortOrder() {
    return sortOrder;
  }

  /**
   * Sets the value of the 'sortOrder' field.
   * @param value the value to set.
   */
  public void setSortOrder(java.lang.String value) {
    this.sortOrder = value;
  }

  /**
   * Gets the value of the 'dataField' field.
   * @return The value of the 'dataField' field.
   */
  public java.lang.String getDataField() {
    return dataField;
  }

  /**
   * Sets the value of the 'dataField' field.
   * @param value the value to set.
   */
  public void setDataField(java.lang.String value) {
    this.dataField = value;
  }

  /**
   * Gets the value of the 'sortByField' field.
   * @return The value of the 'sortByField' field.
   */
  public java.lang.String getSortByField() {
    return sortByField;
  }

  /**
   * Sets the value of the 'sortByField' field.
   * @param value the value to set.
   */
  public void setSortByField(java.lang.String value) {
    this.sortByField = value;
  }

  /**
   * Creates a new AvroSortInfoParam RecordBuilder.
   * @return A new AvroSortInfoParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder newBuilder() {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder();
  }

  /**
   * Creates a new AvroSortInfoParam RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroSortInfoParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder(other);
  }

  /**
   * Creates a new AvroSortInfoParam RecordBuilder by copying an existing AvroSortInfoParam instance.
   * @param other The existing instance to copy.
   * @return A new AvroSortInfoParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder(other);
  }

  /**
   * RecordBuilder for AvroSortInfoParam instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroSortInfoParam>
    implements org.apache.avro.data.RecordBuilder<AvroSortInfoParam> {

    private java.lang.String sortOrder;
    private java.lang.String dataField;
    private java.lang.String sortByField;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sortOrder)) {
        this.sortOrder = data().deepCopy(fields()[0].schema(), other.sortOrder);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataField)) {
        this.dataField = data().deepCopy(fields()[1].schema(), other.dataField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sortByField)) {
        this.sortByField = data().deepCopy(fields()[2].schema(), other.sortByField);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroSortInfoParam instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.sortOrder)) {
        this.sortOrder = data().deepCopy(fields()[0].schema(), other.sortOrder);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.dataField)) {
        this.dataField = data().deepCopy(fields()[1].schema(), other.dataField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sortByField)) {
        this.sortByField = data().deepCopy(fields()[2].schema(), other.sortByField);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'sortOrder' field.
      * @return The value.
      */
    public java.lang.String getSortOrder() {
      return sortOrder;
    }

    /**
      * Sets the value of the 'sortOrder' field.
      * @param value The value of 'sortOrder'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder setSortOrder(java.lang.String value) {
      validate(fields()[0], value);
      this.sortOrder = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sortOrder' field has been set.
      * @return True if the 'sortOrder' field has been set, false otherwise.
      */
    public boolean hasSortOrder() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sortOrder' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder clearSortOrder() {
      sortOrder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataField' field.
      * @return The value.
      */
    public java.lang.String getDataField() {
      return dataField;
    }

    /**
      * Sets the value of the 'dataField' field.
      * @param value The value of 'dataField'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder setDataField(java.lang.String value) {
      validate(fields()[1], value);
      this.dataField = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'dataField' field has been set.
      * @return True if the 'dataField' field has been set, false otherwise.
      */
    public boolean hasDataField() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'dataField' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder clearDataField() {
      dataField = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sortByField' field.
      * @return The value.
      */
    public java.lang.String getSortByField() {
      return sortByField;
    }

    /**
      * Sets the value of the 'sortByField' field.
      * @param value The value of 'sortByField'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder setSortByField(java.lang.String value) {
      validate(fields()[2], value);
      this.sortByField = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sortByField' field has been set.
      * @return True if the 'sortByField' field has been set, false otherwise.
      */
    public boolean hasSortByField() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sortByField' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroSortInfoParam.Builder clearSortByField() {
      sortByField = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroSortInfoParam build() {
      try {
        AvroSortInfoParam record = new AvroSortInfoParam();
        record.sortOrder = fieldSetFlags()[0] ? this.sortOrder : (java.lang.String) defaultValue(fields()[0]);
        record.dataField = fieldSetFlags()[1] ? this.dataField : (java.lang.String) defaultValue(fields()[1]);
        record.sortByField = fieldSetFlags()[2] ? this.sortByField : (java.lang.String) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroSortInfoParam>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroSortInfoParam>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroSortInfoParam>
    READER$ = (org.apache.avro.io.DatumReader<AvroSortInfoParam>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
