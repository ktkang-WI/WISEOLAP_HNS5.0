/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class AvroUdfGroupParam extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1979459255159344425L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroUdfGroupParam\",\"namespace\":\"com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro\",\"fields\":[{\"name\":\"name\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"selectors\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"groupIntervals\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}},{\"name\":\"expression\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroUdfGroupParam> ENCODER =
      new BinaryMessageEncoder<AvroUdfGroupParam>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroUdfGroupParam> DECODER =
      new BinaryMessageDecoder<AvroUdfGroupParam>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroUdfGroupParam> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroUdfGroupParam> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroUdfGroupParam>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroUdfGroupParam to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroUdfGroupParam from a ByteBuffer. */
  public static AvroUdfGroupParam fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String name;
  @Deprecated public java.util.List<java.lang.String> selectors;
  @Deprecated public java.util.List<java.lang.String> groupIntervals;
  @Deprecated public java.lang.String expression;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroUdfGroupParam() {}

  /**
   * All-args constructor.
   * @param name The new value for name
   * @param selectors The new value for selectors
   * @param groupIntervals The new value for groupIntervals
   * @param expression The new value for expression
   */
  public AvroUdfGroupParam(java.lang.String name, java.util.List<java.lang.String> selectors, java.util.List<java.lang.String> groupIntervals, java.lang.String expression) {
    this.name = name;
    this.selectors = selectors;
    this.groupIntervals = groupIntervals;
    this.expression = expression;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return selectors;
    case 2: return groupIntervals;
    case 3: return expression;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.String)value$; break;
    case 1: selectors = (java.util.List<java.lang.String>)value$; break;
    case 2: groupIntervals = (java.util.List<java.lang.String>)value$; break;
    case 3: expression = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'selectors' field.
   * @return The value of the 'selectors' field.
   */
  public java.util.List<java.lang.String> getSelectors() {
    return selectors;
  }

  /**
   * Sets the value of the 'selectors' field.
   * @param value the value to set.
   */
  public void setSelectors(java.util.List<java.lang.String> value) {
    this.selectors = value;
  }

  /**
   * Gets the value of the 'groupIntervals' field.
   * @return The value of the 'groupIntervals' field.
   */
  public java.util.List<java.lang.String> getGroupIntervals() {
    return groupIntervals;
  }

  /**
   * Sets the value of the 'groupIntervals' field.
   * @param value the value to set.
   */
  public void setGroupIntervals(java.util.List<java.lang.String> value) {
    this.groupIntervals = value;
  }

  /**
   * Gets the value of the 'expression' field.
   * @return The value of the 'expression' field.
   */
  public java.lang.String getExpression() {
    return expression;
  }

  /**
   * Sets the value of the 'expression' field.
   * @param value the value to set.
   */
  public void setExpression(java.lang.String value) {
    this.expression = value;
  }

  /**
   * Creates a new AvroUdfGroupParam RecordBuilder.
   * @return A new AvroUdfGroupParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder newBuilder() {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder();
  }

  /**
   * Creates a new AvroUdfGroupParam RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroUdfGroupParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder(other);
  }

  /**
   * Creates a new AvroUdfGroupParam RecordBuilder by copying an existing AvroUdfGroupParam instance.
   * @param other The existing instance to copy.
   * @return A new AvroUdfGroupParam RecordBuilder
   */
  public static com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder newBuilder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam other) {
    return new com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder(other);
  }

  /**
   * RecordBuilder for AvroUdfGroupParam instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroUdfGroupParam>
    implements org.apache.avro.data.RecordBuilder<AvroUdfGroupParam> {

    private java.lang.String name;
    private java.util.List<java.lang.String> selectors;
    private java.util.List<java.lang.String> groupIntervals;
    private java.lang.String expression;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.selectors)) {
        this.selectors = data().deepCopy(fields()[1].schema(), other.selectors);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.groupIntervals)) {
        this.groupIntervals = data().deepCopy(fields()[2].schema(), other.groupIntervals);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.expression)) {
        this.expression = data().deepCopy(fields()[3].schema(), other.expression);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroUdfGroupParam instance
     * @param other The existing instance to copy.
     */
    private Builder(com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.selectors)) {
        this.selectors = data().deepCopy(fields()[1].schema(), other.selectors);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.groupIntervals)) {
        this.groupIntervals = data().deepCopy(fields()[2].schema(), other.groupIntervals);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.expression)) {
        this.expression = data().deepCopy(fields()[3].schema(), other.expression);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder setName(java.lang.String value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'selectors' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getSelectors() {
      return selectors;
    }

    /**
      * Sets the value of the 'selectors' field.
      * @param value The value of 'selectors'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder setSelectors(java.util.List<java.lang.String> value) {
      validate(fields()[1], value);
      this.selectors = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'selectors' field has been set.
      * @return True if the 'selectors' field has been set, false otherwise.
      */
    public boolean hasSelectors() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'selectors' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder clearSelectors() {
      selectors = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'groupIntervals' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getGroupIntervals() {
      return groupIntervals;
    }

    /**
      * Sets the value of the 'groupIntervals' field.
      * @param value The value of 'groupIntervals'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder setGroupIntervals(java.util.List<java.lang.String> value) {
      validate(fields()[2], value);
      this.groupIntervals = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'groupIntervals' field has been set.
      * @return True if the 'groupIntervals' field has been set, false otherwise.
      */
    public boolean hasGroupIntervals() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'groupIntervals' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder clearGroupIntervals() {
      groupIntervals = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'expression' field.
      * @return The value.
      */
    public java.lang.String getExpression() {
      return expression;
    }

    /**
      * Sets the value of the 'expression' field.
      * @param value The value of 'expression'.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder setExpression(java.lang.String value) {
      validate(fields()[3], value);
      this.expression = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'expression' field has been set.
      * @return True if the 'expression' field has been set, false otherwise.
      */
    public boolean hasExpression() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'expression' field.
      * @return This builder.
      */
    public com.wise.MarketingPlatForm.report.domain.item.pivot.pivotmatrix.schema.avro.AvroUdfGroupParam.Builder clearExpression() {
      expression = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroUdfGroupParam build() {
      try {
        AvroUdfGroupParam record = new AvroUdfGroupParam();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.String) defaultValue(fields()[0]);
        record.selectors = fieldSetFlags()[1] ? this.selectors : (java.util.List<java.lang.String>) defaultValue(fields()[1]);
        record.groupIntervals = fieldSetFlags()[2] ? this.groupIntervals : (java.util.List<java.lang.String>) defaultValue(fields()[2]);
        record.expression = fieldSetFlags()[3] ? this.expression : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroUdfGroupParam>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroUdfGroupParam>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroUdfGroupParam>
    READER$ = (org.apache.avro.io.DatumReader<AvroUdfGroupParam>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
