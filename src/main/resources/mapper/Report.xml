<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wise.MarketingPlatForm.report.dao.ReportDAO">
  <!-- Mapper -->
  <resultMap id="ReportList" type="com.wise.MarketingPlatForm.report.vo.ReportListDTO">
		<result column="ID" property="id" javaType="int"/>
    <result column="TEXT" property="name" javaType="String"/>
    <result column="UPPERID" property="upperId" javaType="int"/>
    <result column="ORDINAL" property="ordinal" javaType="int"/>
    <result column="REPORT_TYPE" property="reportType" javaType="String"/>
    <result column="TYPE" property="type" javaType="String"/>
	</resultMap>

  <resultMap id="DetailedDataItem" type="com.wise.MarketingPlatForm.dataset.domain.cube.vo.DetailedDataItemVO">
    <result column="CUBE_ID" property="cubeId" javaType="int"/>
    <result column="ACT_ID" property="actId" javaType="int"/>
    <result column="ACT_NM" property="actNm" javaType="String"/>
    <result column="UNI_NM" property="uniNm" javaType="String"/>
    <result column="RTN_ITEM_UNI_NM" property="rtnItemUniNm" javaType="String"/>
    <result column="TYPE" property="type" javaType="String"/>
  </resultMap>
  
  
  <!-- Query -->
    <select id="selectReport" parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
        SELECT 	A.REPORT_ID as reportId
				, A.REPORT_NM as reportNm
				, A.FLD_ID as fldId
				, A.FLD_TYPE as fldType
				, A.REPORT_ORDINAL as reportOrdinal
				, A.REPORT_TYPE as reportType
				, A.REPORT_TAG as reportTag
				, A.REPORT_DESC as reportDesc
				, A.REPORT_LAYOUT as reportLayout
				, A.GRID_INFO as gridInfo
				, A.DATASRC_ID as dataSrcId
				, A.DATASRC_TYPE as datasrcType
				, A.DATASET_TYPE as datasetType
				, A.REPORT_XML as reportXml
				, A.CHART_XML as chartXml
				, A.LAYOUT_XML as layoutXml
				, A.DATASET_XML as datasetXml
				, A.PARAM_XML as paramXml
				, A.DATASET_QUERY as datasetQuery
				, A.DEL_YN as delYn
				, A.REG_USER_NO as regUserNo
				, B.USER_NM AS RegUserNm
				, A.REG_DT as regDt
				, A.PROMPT_YN as promptYn
				, A.REPORT_SUB_TITLE as reportSubTitle
				, A.MOD_USER_NO as modUserNo
				, C.USER_NM AS modUserNm
				, A.MOD_DT as modDt
				, B.USER_NM as userNm
				, A.PRIVACY_YN as privacyYn
            FROM 	REPORT_MSTR A
				LEFT OUTER JOIN USER_MSTR B ON A.REG_USER_NO = B.USER_NO
				LEFT OUTER JOIN USER_MSTR C ON A.MOD_USER_NO = C.USER_NO
            WHERE   1=1
            AND		A.DEL_YN = 'N'
            <if test='reportId != null'>
                AND A.REPORT_ID = #{reportId}
            </if>
    </select>

    <select id="selectPublicReportList" resultMap="ReportList">
        SELECT 	DISTINCT ID,
            TEXT,
            UPPERID,
            ORDINAL,
            REPORT_TYPE,
            TYPE,
            REG_DT
        FROM ((SELECT DISTINCT 	PUB_FLD_MSTR.FLD_ID				AS ID,
                      PUB_FLD_MSTR.FLD_NM				AS TEXT,
                            PUB_FLD_MSTR.FLD_PARENT_ID 		AS UPPERID,
                            PUB_FLD_MSTR.FLD_ORDINAL   		AS ORDINAL,
                            NULL 							AS REPORT_TYPE,
                            'FOLDER'                   		AS TYPE,
                            NULL						  	AS REG_DT
              FROM   				USER_AUTH_REPORT_MSTR_TEMP
            INNER JOIN 			USER_MSTR 						ON USER_MSTR.USER_NO = USER_AUTH_REPORT_MSTR_TEMP.USER_NO
            INNER JOIN 			PUB_FLD_MSTR 					ON PUB_FLD_MSTR.FLD_ID = USER_AUTH_REPORT_MSTR_TEMP.FLD_ID
            <if test='editMode == "designer"'>
              WHERE  				USER_MSTR.USER_ID = #{userId}
              AND 				AUTH_PUBLISH != 'N'
            </if>
            <if test='editMode == "viewer"'>
              WHERE  				USER_MSTR.USER_ID = #{userId}
              AND 				AUTH_VIEW != 'N'
            </if>
            )
                UNION ALL
              (SELECT DISTINCT 	PUB_FLD_MSTR.FLD_ID        		AS ID,
                            PUB_FLD_MSTR.FLD_NM       		AS TEXT,
                            PUB_FLD_MSTR.FLD_PARENT_ID 		AS UPPERID,
                            PUB_FLD_MSTR.FLD_ORDINAL   		AS ORDINAL,
                            NULL 							AS REPORT_TYPE,
                            'FOLDER'                  	 	AS TYPE,
                            NULL						  	AS REG_DT
            FROM   				GRP_AUTH_REPORT_MSTR_TEMP
            INNER JOIN 			USER_MSTR 						ON USER_MSTR.GRP_ID = GRP_AUTH_REPORT_MSTR_TEMP.GRP_ID
            INNER JOIN 			PUB_FLD_MSTR 					ON PUB_FLD_MSTR.FLD_ID = GRP_AUTH_REPORT_MSTR_TEMP.FLD_ID
            <if test='editMode == "designer"'>
              WHERE  				USER_MSTR.USER_ID = #{userId}
              AND 				AUTH_PUBLISH != 'N'
            </if>
            <if test='editMode == "viewer"'>
              WHERE  				USER_MSTR.USER_ID = #{userId}
              AND 				AUTH_VIEW != 'N'
            </if>
            )
              UNION ALL
            (SELECT 			REPORT_MSTR.REPORT_ID			AS ID,
                          REPORT_MSTR.REPORT_NM			AS TEXT,
                      REPORT_MSTR.FLD_ID 				AS UPPERID,
                          REPORT_MSTR.REPORT_ORDINAL 		AS ORDINAL,
                          REPORT_MSTR.REPORT_TYPE 		AS REPORT_TYPE,
                          'REPORT'           				AS TYPE,
                          REPORT_MSTR.REG_DT				AS REG_DT
            FROM   				REPORT_MSTR
            INNER JOIN 			PUB_FLD_MSTR 					ON REPORT_MSTR.FLD_ID = PUB_FLD_MSTR.FLD_ID
            WHERE  				REPORT_MSTR.DEL_YN != 'Y'
        <if test="reportTypes != null">
            AND 				REPORT_MSTR.REPORT_TYPE IN
            <foreach collection="reportTypes" item="type" open="(" close=")" separator=",">
             #{type}
            </foreach>
        </if>
        ) ) A
        ORDER BY UPPERID, TYPE, ORDINAL
    </select>

    <select id="selectPrivateReportList" resultMap="ReportList">
      SELECT *
      FROM  (( SELECT DISTINCT USER_FLD_MSTR.FLD_ID       AS ID,
                     USER_FLD_MSTR.FLD_NM        			AS TEXT,
                     USER_FLD_MSTR.FLD_PARENT_ID 			AS UPPERID,
                     USER_FLD_MSTR.FLD_ORDINAL   			AS ORDINAL,
                     NULL 								AS REPORT_TYPE,
                     'FOLDER'                   			AS TYPE,
                   NULL						  			AS REG_DT
              FROM   USER_FLD_MSTR
                     INNER JOIN USER_MSTR
                             ON USER_MSTR.USER_NO = USER_FLD_MSTR.USER_NO
              WHERE  USER_MSTR.USER_ID = #{userId}
                )
             UNION ALL
             (SELECT REPORT_MSTR.REPORT_ID          		AS ID,
                     REPORT_MSTR.REPORT_NM          		AS TEXT,
                     REPORT_MSTR.FLD_ID 					AS UPPERID,
                     REPORT_MSTR.REPORT_ORDINAL     		AS ORDINAL,
                     REPORT_MSTR.REPORT_TYPE 				AS REPORT_TYPE,
                     'REPORT'           					AS TYPE,
                 REPORT_MSTR.REG_DT					AS REG_DT
              FROM   REPORT_MSTR
                     INNER JOIN USER_FLD_MSTR
                             ON REPORT_MSTR.FLD_ID = USER_FLD_MSTR.FLD_ID
              WHERE  				REPORT_MSTR.DEL_YN != 'Y'
              <if test="reportTypes != null">
                  AND 				REPORT_MSTR.REPORT_TYPE IN
                  <foreach collection="reportTypes" item="type" open="(" close=")" separator=",">
                  #{type}
                  </foreach>
              </if>
              ) ) A
      ORDER  BY UPPERID,
                TYPE,
                ORDINAL
    </select>

    <select id="selectPublicReportFolderList" parameterType="String" resultType="com.wise.MarketingPlatForm.report.vo.FolderMasterVO">
        SELECT 		PUB_FLD_MSTR.FLD_ID 		AS fldId,
					FLD_NM 						AS fldNm,
					FLD_PARENT_ID 				AS fldParentId,
					FLD_ORDINAL 				AS fldOrdinal
		FROM  		GRP_AUTH_REPORT_MSTR_TEMP
					INNER JOIN USER_MSTR 		ON USER_MSTR.GRP_ID = GRP_AUTH_REPORT_MSTR_TEMP.GRP_ID
					INNER JOIN PUB_FLD_MSTR 	ON PUB_FLD_MSTR.FLD_ID = GRP_AUTH_REPORT_MSTR_TEMP.FLD_ID
		WHERE 		USER_MSTR.USER_ID = #{userId}
					AND USER_MSTR.DEL_YN = 'N'
        			AND AUTH_PUBLISH != 'N'
		ORDER BY 	fldParentId, fldOrdinal
    </select>

    <select id="selectPrivateReportFolderList" parameterType="String" resultType="com.wise.MarketingPlatForm.report.vo.FolderMasterVO">
        SELECT FLD_ID AS fldId,
		FLD_NM AS fldNm,
		FLD_PARENT_ID AS fldParentId,
		FLD_ORDINAL AS fldOrdinal
		FROM USER_FLD_MSTR
		INNER JOIN USER_MSTR
		ON USER_MSTR.USER_NO = USER_FLD_MSTR.USER_NO
		WHERE USER_MSTR.USER_ID = #{userId}
    </select>
  
      <select id='selectLinkReportList' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportLinkMstrEntity">
		SELECT	A.REPORT_ID AS reportId,
				A.LINK_REPORT_ID AS linkReportId,
				(SELECT REPORT_NM FROM REPORT_MSTR WHERE REPORT_ID = LINK_REPORT_ID) AS linkReportNm,
				A.DATA_LINK_TYPE AS dataLinkType,
				A.LINK_XML AS linkXml,
				A.LINK_REPORT_TYPE AS linkReportType
		FROM REPORT_LINK_MSTR A
		WHERE A.REPORT_ID = #{id}
    </select>

    <select id='selectSubLinkReportList' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportLinkSubMstrEntity">
		SELECT	A.REPORT_ID AS reportId,
				A.LINK_REPORT_ID AS linkReportId,
				(SELECT REPORT_NM FROM REPORT_MSTR WHERE REPORT_ID = LINK_REPORT_ID) AS linkReportNm,
        A.LINK_SUB_ITEM AS linkSubItem,
				A.LINK_DATA_TYPE AS linkDataType,
				A.LINK_XML_PARAM AS linkXmlParam,
        A.LINK_XML_DATA As linkXmlData,
				A.LINK_REPORT_TYPE AS linkReportType
		FROM REPORT_LINK_SUB_MSTR A
		WHERE A.REPORT_ID = #{id}
    </select>

    <select id='selectLinkReportParam' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
    SELECT A.PARAM_XML as paramXml FROM REPORT_MSTR A
    WHERE 1=1
      <if test='reportId != null'>
        AND A.REPORT_ID = #{reportId}
      </if>
    </select>

  <insert id = "insertLinkReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportLinkMstrEntity">
    INSERT INTO REPORT_LINK_MSTR
      (
        REPORT_ID,
        LINK_REPORT_ID,
        LINK_XML,
        LINK_REPORT_ORDINAL,
        LINK_REPORT_TYPE,
        DATA_LINK_TYPE
      )
    VALUES
      (
        #{reportId},
        #{linkReportId},
        #{linkXml},
        #{linkReportOrdinal},
        #{linkReportType},
        #{dataLinkType}
      )
  </insert>

  <insert id = "insertSubLinkReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportLinkSubMstrEntity">
    INSERT INTO REPORT_LINK_SUB_MSTR
      (
        SEQ,
        REPORT_ID,
        LINK_REPORT_ID,
        LINK_SUB_ITEM,
        LINK_DATA_TYPE,
        LINK_XML_PARAM,
        LINK_XML_DATA,
        LINK_REPORT_ORDINAL,
        LINK_REPORT_TYPE
      )
    VALUES
      (
        REPORT_LINK_SUB_MSTR_SEQ.NEXTVAL,
        #{reportId},
        #{linkReportId},
        #{linkSubItem},
        #{linkDataType},
        #{linkXmlParam},
        #{linkXmlData},
        #{linkReportOrdinal},
        #{linkReportType}
      )
  </insert>

	<insert id = "insertReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		<selectKey keyProperty="reportId" resultType="int" order="AFTER">
			SELECT MAX(REPORT_ID) FROM REPORT_MSTR
		</selectKey>
		INSERT INTO REPORT_MSTR
			(
				REPORT_ID,
				REPORT_NM,
				REPORT_SUB_TITLE,
				FLD_ID,
				FLD_TYPE,
				REPORT_ORDINAL,
				REPORT_TYPE,
				REPORT_DESC,
				PARAM_XML,
        REPORT_TAG,
				REG_USER_NO,
				CHART_XML,
				LAYOUT_XML,
				REPORT_XML,
				DATASET_XML,
        REG_DT
			)
		VALUES
			(
				REPORT_MSTR_REPORT_ID_SEQ.NEXTVAL,
				#{reportNm},
				#{reportSubTitle},
				#{fldId},
				#{fldType},
				#{reportOrdinal},
				#{reportType},
				#{reportDesc},
				#{paramXml},
        #{reportTag},
				#{regUserNo},
				#{chartXml},
				#{layoutXml},
				#{reportXml},
				#{datasetXml},
        SYSDATE
			)
	</insert>

	<update id = "updateReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		UPDATE REPORT_MSTR
		SET
			REPORT_NM = #{reportNm},
			REPORT_SUB_TITLE = #{reportSubTitle},
			FLD_ID = #{fldId},
			FLD_TYPE = #{fldType},
			REPORT_ORDINAL = #{reportOrdinal},
			REPORT_TYPE = #{reportType},
			REPORT_DESC = #{reportDesc},
			DATASET_XML = #{datasetXml},
			PARAM_XML = #{paramXml},
      REPORT_TAG = #{reportTag},
			MOD_USER_NO = #{modUserNo},
			REPORT_XML = #{reportXml},
			CHART_XML = #{chartXml},
			LAYOUT_XML = #{layoutXml},
      MOD_DT = SYSDATE
		WHERE REPORT_ID = #{reportId}
	</update>

  <update id = "updateConfigReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		UPDATE REPORT_MSTR
		SET
			REPORT_NM = #{reportNm},
			REPORT_SUB_TITLE = #{reportSubTitle},
			FLD_ID = #{fldId},
			FLD_TYPE = #{fldType},
			REPORT_ORDINAL = #{reportOrdinal},
			REPORT_TYPE = #{reportType},
			REPORT_DESC = #{reportDesc},
      REPORT_TAG = #{reportTag}
		WHERE REPORT_ID = #{reportId}
	</update>

	<update id="deleteReport" parameterType="int">
		UPDATE REPORT_MSTR
		SET DEL_YN = 'Y'
		WHERE REPORT_ID = #{reportId}
	</update>

	<select id="checkDuplicatedReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity"
		resultType="hashmap">
		SELECT REPORT_NM
		FROM REPORT_MSTR
		WHERE REPORT_NM = #{reportNm}
		AND FLD_ID = #{fldId}
		AND DEL_YN = 'N'
	</select>

    <select id="selectDetailedDataItem" resultMap="DetailedDataItem">
      SELECT
          T.CUBE_ID AS CUBE_ID,
          T.ACT_ID AS ACT_ID,
          T.ACT_NM AS ACT_NM,
          T.UNI_NM AS UNI_NM,
          T.RTN_ITEM_UNI_NM AS RTN_ITEM_UNI_NM,
          T.ORDINAL AS ORDINAL,
          CASE
              WHEN EXISTS (
                  SELECT 1
                  FROM CUBE_HIE_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.HIE_UNI_NM
              ) OR EXISTS (
                  SELECT 1
                  FROM CUBE_MEA_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.MEA_UNI_NM
                  AND A.MEA_AGG IS NULL
              ) THEN 'dimension'
              WHEN EXISTS (
                  SELECT 1
                  FROM CUBE_MEA_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.MEA_UNI_NM
                  AND A.MEA_AGG IS NOT NULL
              ) THEN 'measure'
              ELSE NULL
          END AS TYPE
      FROM (
          SELECT
              X.CUBE_ID,
              X.ACT_ID,
              X.ACT_NM,
              Y.UNI_NM,
              Y.RTN_ITEM_UNI_NM,
              Y.ORDINAL
          FROM
              CUBE_ACT_MSTR X
          INNER JOIN CUBE_ACT_RTN_ITEM Y
              ON X.CUBE_ID = Y.CUBE_ID
              AND X.ACT_ID = Y.ACT_ID
          WHERE
              X.CUBE_ID = #{cubeId}
              AND X.ACT_ID = #{actId}
      ) T
      ORDER BY
          T.ORDINAL
    </select>

    <insert id="insertUserUpload" parameterType="com.wise.MarketingPlatForm.dataset.entity.UserUploadMstrEntity">
        INSERT INTO USER_UPLOAD_MSTR(    
				 DATA_SEQ
				,DATA_NM                    
				,TBL_NM         
				,REG_USER_NO
				,DATA_DESC                
				,UPLOAD_XML
				,REG_DT 
				,UPD_DT
				,DS_ID               
			 ) VALUES (
				 USER_DATA_FILE_MSTR_DATA_SEQ.NEXTVAL
				,#{dataNm}                 
				,#{tableNm}    
				,#{regUserNo}  
				,#{dataDesc}              
				,#{uploadXml} 
				,SYSDATE
				,SYSDATE
				,#{dsId}
			 )
    </insert>

    <select id='selectReportName' resultType='string'>
      SELECT REPORT_NM FROM REPORT_MSTR WHERE REPORT_ID = #{reportId}
    </select>
</mapper>