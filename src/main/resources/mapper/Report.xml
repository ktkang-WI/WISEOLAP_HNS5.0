<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wise.MarketingPlatForm.report.dao.ReportDAO">
  <!-- Mapper -->
  <resultMap id="ReportList" type="com.wise.MarketingPlatForm.report.vo.ReportListDTO">
		<result column="ID" property="id" javaType="int"/>
    <result column="ID" property="uniqueId" javaType="String"/>
    <result column="TEXT" property="name" javaType="String"/>
    <result column="UPPERID" property="upperId" javaType="int"/>
    <result column="ORDINAL" property="ordinal" javaType="int"/>
    <result column="REPORT_TYPE" property="reportType" javaType="String"/>
    <result column="TYPE" property="type" javaType="String"/>
    <result column="REQUESTER" property="requester" javaType="String"/>
    <result column="REG_DT" property="regDt" javaType="java.sql.Timestamp"/>
    <result column="MOD_DT" property="modDt" javaType="java.sql.Timestamp"/>
    <result column="REPORT_TAG" property="reportTag" javaType="String"/>
    <result column="REPORT_DESC" property="reportDesc" javaType="String"/>
    <result column="PROMPT_YN" property="promptYn" javaType="String"/>
    <result column="REG_USER_NO" property="regUserNo" javaType="int"/>
    <result column="MOD_USER_NO" property="modUserNo" javaType="int"/>
    <result column="REG_USER_NM" property="regUserName" javaType="String"/>
    <result column="MOD_USER_NM" property="modUserName" javaType="String"/>
    <result column="DATASET" property="dataset" javaType="String"/>
    <result column="AUTH_PUBLISH" property="authPublish" javaType="int"/>
    <result column="ROOT_FLD_ID" property="rootFldId" javaType="int"/>
  </resultMap>

  <resultMap id="DetailedDataItem" type="com.wise.MarketingPlatForm.dataset.domain.cube.vo.DetailedDataItemVO">
    <result column="CUBE_ID" property="cubeId" javaType="int"/>
    <result column="ACT_ID" property="actId" javaType="int"/>
    <result column="ACT_NM" property="actNm" javaType="String"/>
    <result column="UNI_NM" property="uniNm" javaType="String"/>
    <result column="RTN_ITEM_UNI_NM" property="rtnItemUniNm" javaType="String"/>
    <result column="TYPE" property="type" javaType="String"/>
  </resultMap>
  
  
  <!-- Query -->
    <select id="selectReport" parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
        SELECT 	A.REPORT_ID as reportId
				, A.REPORT_NM as reportNm
				, A.FLD_ID as fldId
				, A.FLD_TYPE as fldType
				, A.REPORT_ORDINAL as reportOrdinal
				, A.REPORT_TYPE as reportType
				, A.REPORT_TAG as reportTag
				, A.REPORT_DESC as reportDesc
				, A.REPORT_LAYOUT as reportLayout
				, A.GRID_INFO as gridInfo
				, A.DATASRC_ID as dataSrcId
				, A.DATASRC_TYPE as datasrcType
				, A.DATASET_TYPE as datasetType
				, A.REPORT_XML as reportXml
				, A.CHART_XML as chartXml
				, A.LAYOUT_XML as layoutXml
				, A.DATASET_XML as datasetXml
				, A.PARAM_XML as paramXml
				, A.DATASET_QUERY as datasetQuery
				, A.DEL_YN as delYn
				, A.REG_USER_NO as regUserNo
				, B.USER_NM AS RegUserNm
				, A.REG_DT as regDt
				, A.PROMPT_YN as promptYn
        , A.MAX_REPORT_PERIOD_YN as maxReportPeriodYn
				, A.REPORT_SUB_TITLE as reportSubTitle
				, A.MOD_USER_NO as modUserNo
				, C.USER_NM AS modUserNm
				, A.MOD_DT as modDt
				, B.USER_NM as userNm
				, A.PRIVACY_YN as privacyYn
        FROM 	REPORT_MSTR A
				LEFT OUTER JOIN USER_MSTR B ON A.REG_USER_NO = B.USER_NO
				LEFT OUTER JOIN USER_MSTR C ON A.MOD_USER_NO = C.USER_NO
            WHERE   1=1
            AND		A.DEL_YN = 'N'
            <if test='reportId != null'>
                AND A.REPORT_ID = #{reportId}
            </if>
    </select>
  
    <!-- TODO : Query refactoring 필요 -->
    <select id="publicReportList" resultMap="ReportList">
      SELECT
      ID,
      TEXT,
      UPPERID,
      ORDINAL,
      REPORT_TYPE,
      TYPE,
      REG_DT,
      MOD_DT,
      REQUESTER,
      REPORT_TAG,
      DATASET
      FROM (
      SELECT
            REPORT_MSTR.REPORT_ID AS ID,
            REPORT_MSTR.REPORT_NM AS TEXT,
            REPORT_MSTR.FLD_ID AS UPPERID,
            REPORT_MSTR.REPORT_ORDINAL AS ORDINAL,
            REPORT_MSTR.REPORT_TYPE AS REPORT_TYPE,
            'REPORT' AS TYPE,
            REPORT_MSTR.REG_DT AS REG_DT,                     
            REPORT_MSTR.MOD_DT AS MOD_DT,                                 
            REPORT_MSTR.GRID_INFO AS REQUESTER,                          
            REPORT_MSTR.REPORT_TAG AS REPORT_TAG,
            TO_CLOB(REPORT_MSTR.DATASET_XML) AS DATASET
      FROM PUB_FLD_MSTR
      INNER JOIN REPORT_MSTR
      ON PUB_FLD_MSTR.FLD_ID = REPORT_MSTR.FLD_ID
      INNER JOIN USER_MSTR 
      ON USER_MSTR.USER_NO = REPORT_MSTR.REG_USER_NO
      WHERE REPORT_MSTR.DEL_YN = 'N'
      AND USER_MSTR.DEL_YN = 'N'

      UNION ALL

      SELECT
            PUB_FLD_MSTR.FLD_ID AS ID,
            PUB_FLD_MSTR.FLD_NM AS TEXT,
            PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,
            PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,
            NULL AS REPORT_TYPE,
            'FOLDER' AS TYPE,
            NULL AS REG_DT,                                                       
            NULL AS MOD_DT,                             
            NULL AS REQUESTER,                               
            NULL AS REPORT_TAG,
            TO_CLOB('') AS DATASET
      FROM PUB_FLD_MSTR
      )
      ORDER BY UPPERID, TYPE, ORDINAL
    </select>

    <select id="selectPortalReportList" resultMap="ReportList">
      SELECT
      ID,
      TEXT,
      UPPERID,
      ORDINAL,
      REPORT_TYPE,
      TYPE,
      REPORT_DESC,
      REG_DT,
      MOD_DT,
      REQUESTER,
      REPORT_TAG,
      DATASET,
      ROOT_FLD_ID
      FROM (
      SELECT
            REPORT_MSTR.REPORT_ID AS ID,
            REPORT_MSTR.REPORT_NM AS TEXT,
            REPORT_MSTR.FLD_ID AS UPPERID,
            REPORT_MSTR.REPORT_ORDINAL AS ORDINAL,
            REPORT_MSTR.REPORT_TYPE AS REPORT_TYPE,
            'REPORT' AS TYPE,
            TO_CHAR(REPORT_MSTR.REPORT_DESC) AS REPORT_DESC,
            REPORT_MSTR.REG_DT AS REG_DT,                     
            REPORT_MSTR.MOD_DT AS MOD_DT,                                 
            REPORT_MSTR.GRID_INFO AS REQUESTER,                          
            REPORT_MSTR.REPORT_TAG AS REPORT_TAG,
            TO_CLOB(REPORT_MSTR.DATASET_XML) AS DATASET,
            TO_CHAR(A.ROOT_FLD_ID) AS ROOT_FLD_ID
      FROM (SELECT  FLD_ID , CONNECT_BY_ROOT FLD_ID AS ROOT_FLD_ID
				FROM PUB_FLD_MSTR
				START WITH FLD_ID IN
        <foreach collection="folders" item="folder" index="index" open="(" separator="," close=")">
          #{folder}
        </foreach>
				CONNECT BY PRIOR FLD_ID = FLD_PARENT_ID) A
      INNER JOIN REPORT_MSTR
      ON A.FLD_ID = REPORT_MSTR.FLD_ID
      INNER JOIN USER_MSTR
      ON USER_MSTR.USER_NO = REPORT_MSTR.REG_USER_NO
      WHERE REPORT_MSTR.DEL_YN = 'N'
      AND USER_MSTR.DEL_YN = 'N'
      UNION ALL
      SELECT
            PUB_FLD_MSTR.FLD_ID AS ID,
            PUB_FLD_MSTR.FLD_NM AS TEXT,
            PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,
            PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,
            NULL AS REPORT_TYPE,
            'FOLDER' AS TYPE,
            '' AS REPORT_DESC,
            NULL AS REG_DT,                                                       
            NULL AS MOD_DT,                             
            NULL AS REQUESTER,                               
            NULL AS REPORT_TAG,
            TO_CLOB('') AS DATASET,
            '0' AS ROOT_FLD_ID
      FROM PUB_FLD_MSTR
      WHERE FLD_ID IN 
      <foreach collection="folders" item="folder" index="index" open="(" separator="," close=")">
        #{folder}
      </foreach>
      )     WHERE UPPERID IN (SELECT DISTINCT FLD_ID
					FROM(
					SELECT FLD_ID, TO_CHAR(AUTH_VIEW) AS AUTH_VIEW FROM GRP_AUTH_REPORT_MSTR
					WHERE GRP_ID = #{grpId}
					UNION ALL
					SELECT FLD_ID, TO_CHAR(AUTH_VIEW) AS AUTH_VIEW FROM USER_AUTH_REPORT_MSTR
					WHERE USER_NO = #{userNo}
					UNION ALL 
					SELECT 0 AS FLD_ID, '1' AS AUTH_VIEW FROM DUAL
					)
					WHERE AUTH_VIEW = 1
					)
      ORDER BY TYPE,UPPERID, ORDINAL
    </select>

    <select id="selectPublicReportList" resultMap="ReportList">
      SELECT DISTINCT 
          A.ID,
          A.TEXT,
          A.UPPERID,
          A.ORDINAL,
          A.REPORT_TYPE,
          A.TYPE,
          A.REG_DT,
          UM_REG.USER_NM AS REG_USER_NM,
          A.MOD_DT,
          UM_MOD.USER_NM AS MOD_USER_NM,
          A.REQUESTER,
          A.REPORT_TAG,
          A.REPORT_DESC,
          A.PROMPT_YN
      FROM (
          (
              SELECT DISTINCT  
                  PUB_FLD_MSTR.FLD_ID AS ID,                             
                  PUB_FLD_MSTR.FLD_NM AS TEXT,                             
                  PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,                             
                  PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,                             
                  NULL AS REPORT_TYPE,                             
                  'FOLDER' AS TYPE,                                                       
                  NULL AS REG_DT,                             
                  NULL AS REG_USER_NO,          
                  NULL AS MOD_DT,                             
                  NULL AS MOD_USER_NO,      
                  NULL AS REQUESTER,                          
                  NULL AS REPORT_TAG,                             
                  NULL AS REPORT_DESC,
                  NULL AS PROMPT_YN           
              FROM               
                  USER_AUTH_REPORT_MSTR             
              INNER JOIN         
                  USER_MSTR ON USER_MSTR.USER_NO = USER_AUTH_REPORT_MSTR.USER_NO             
              INNER JOIN         
                  PUB_FLD_MSTR ON PUB_FLD_MSTR.FLD_ID = USER_AUTH_REPORT_MSTR.FLD_ID                             
              WHERE            
                  USER_MSTR.USER_ID = #{userId}         
                  <if test='editMode == "designer"'>
                    <!-- AND AUTH_PUBLISH != 0 -->
                    AND AUTH_VIEW != 0
                  </if>
                  <if test='editMode == "viewer"'>
                    AND AUTH_VIEW != 0
                  </if>  
          )           
          UNION ALL           
          (
              SELECT DISTINCT  
                  PUB_FLD_MSTR.FLD_ID AS ID,                             
                  PUB_FLD_MSTR.FLD_NM AS TEXT,                             
                  PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,                             
                  PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,                             
                  NULL AS REPORT_TYPE,                      
                  'FOLDER' AS TYPE,                                              
                  NULL AS REG_DT,                             
                  NULL AS REG_USER_NO,                             
                  NULL AS MOD_DT,                             
                  NULL AS MOD_USER_NO,  
                  NULL AS REQUESTER,                                
                  NULL AS REPORT_TAG,                             
                  NULL AS REPORT_DESC,
                  NULL AS PROMPT_YN          
              FROM               
                  GRP_AUTH_REPORT_MSTR             
              INNER JOIN         
                  USER_MSTR ON USER_MSTR.GRP_ID = GRP_AUTH_REPORT_MSTR.GRP_ID             
              INNER JOIN         
                  PUB_FLD_MSTR ON PUB_FLD_MSTR.FLD_ID = GRP_AUTH_REPORT_MSTR.FLD_ID                             
              WHERE            
                  USER_MSTR.USER_ID = #{userId}                    
                  <if test='editMode == "designer"'>
                    <!-- AND AUTH_PUBLISH != 0 -->
                    AND AUTH_VIEW != 0
                  </if>
                  <if test='editMode == "viewer"'>
                    AND AUTH_VIEW != 0
                  </if>                                  
          )           
          UNION ALL           
          (
              SELECT            
                  REPORT_MSTR.REPORT_ID AS ID,                             
                  REPORT_MSTR.REPORT_NM AS TEXT,                             
                  REPORT_MSTR.FLD_ID AS UPPERID,                             
                  REPORT_MSTR.REPORT_ORDINAL AS ORDINAL,                             
                  REPORT_MSTR.REPORT_TYPE AS REPORT_TYPE,                             
                  'REPORT' AS TYPE,                             
                  REPORT_MSTR.REG_DT AS REG_DT,                                                  
                  REPORT_MSTR.REG_USER_NO AS REG_USER_NO,             
                  REPORT_MSTR.MOD_DT AS MOD_DT,                             
                  REPORT_MSTR.MOD_USER_NO AS MOD_USER_NO,      
                  REPORT_MSTR.GRID_INFO AS REQUESTER,                          
                  REPORT_MSTR.REPORT_TAG AS REPORT_TAG,                             
                  TO_CHAR(REPORT_MSTR.REPORT_DESC) AS REPORT_DESC,
                  REPORT_MSTR.PROMPT_YN             
              FROM               
                  REPORT_MSTR             
              INNER JOIN         
                  PUB_FLD_MSTR ON REPORT_MSTR.FLD_ID = PUB_FLD_MSTR.FLD_ID             
              WHERE              
                  REPORT_MSTR.DEL_YN != 'Y'
                  <if test="reportTypes != null">
                    AND  REPORT_MSTR.REPORT_TYPE IN
                    <foreach collection="reportTypes" item="type" open="(" close=")" separator=",">
                        #{type}
                    </foreach>
                </if>                                                 
          )
      ) A
      LEFT JOIN USER_MSTR UM_REG ON UM_REG.USER_NO = A.REG_USER_NO
      LEFT JOIN USER_MSTR UM_MOD ON UM_MOD.USER_NO = A.MOD_USER_NO
      ORDER BY TYPE, UPPERID, ORDINAL, TEXT
    </select>

    <select id="selectTop10ReportList" resultMap="ReportList">
      SELECT 
          rm.REPORT_ID AS ID,                             
          rm.REPORT_NM AS TEXT,                             
          rm.FLD_ID AS UPPERID,                             
          rm.REPORT_ORDINAL AS ORDINAL,                             
          rm.REPORT_TYPE AS REPORT_TYPE,                             
          'REPORT' AS TYPE,                             
          rm.REG_DT AS REG_DT,                                                  
          rm.REG_USER_NO AS REG_USER_NO,             
          rm.MOD_DT AS MOD_DT,                             
          rm.MOD_USER_NO AS MOD_USER_NO,      
          rm.GRID_INFO AS REQUESTER,                          
          rm.REPORT_TAG AS REPORT_TAG,                             
          TO_CHAR(rm.REPORT_DESC) AS REPORT_DESC,
          rm.PROMPT_YN,
          NULL AS AUTH_PUBLISH             
      FROM 
      (
          SELECT REPORT_ID
          FROM (
              SELECT 
                  A.STATUS_CD AS STATUS_CD,
                  A.LOG_SEQ AS LOG_SEQ,
                  A.REPORT_ID AS REPORT_ID,
                  A.REPORT_NM AS REPORT_NM,
                  A.REPORT_TYPE AS REPORT_TYPE,
                  A.ST_DT AS ST_DT,
                  A.ED_DT AS ED_DT,
                  A.USER_ID AS USER_ID,
                  A.USER_NM AS USER_NM,
                  A.ACCESS_IP AS ACCESS_IP,
                  ROW_NUMBER() OVER (PARTITION BY A.REPORT_ID ORDER BY A.ST_DT DESC) AS RN
              FROM LOG_REPORT_USE2 A
              WHERE A.USER_ID = #{userId}
            AND A.ST_DT BETWEEN TRUNC(SYSDATE) AND TRUNC(SYSDATE) + 1
          )
          WHERE RN = 1
          ORDER BY ST_DT DESC
      ) A 
      LEFT JOIN REPORT_MSTR rm ON A.REPORT_ID = rm.REPORT_ID
      WHERE rm.FLD_ID != 2405
      FETCH FIRST 10 ROWS ONLY
    </select>

    <select id="selectFavoriteReportList" resultMap="ReportList">
      SELECT DISTINCT 
          A.ID,
          A.TEXT,
          A.UPPERID,
          A.ORDINAL,
          A.REPORT_TYPE,
          A.TYPE,
          A.REG_DT,
          UM_REG.USER_NM AS REG_USER_NM,
          A.MOD_DT,
          UM_MOD.USER_NM AS MOD_USER_NM,
          A.REQUESTER,
          A.REPORT_TAG,
          A.REPORT_DESC,
          A.PROMPT_YN,
          A.AUTH_PUBLISH
      FROM (
          (
              SELECT DISTINCT  
                  PUB_FLD_MSTR.FLD_ID AS ID,                             
                  PUB_FLD_MSTR.FLD_NM AS TEXT,                             
                  PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,                             
                  PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,                             
                  NULL AS REPORT_TYPE,                             
                  'FOLDER' AS TYPE,                                                       
                  NULL AS REG_DT,                             
                  NULL AS REG_USER_NO,          
                  NULL AS MOD_DT,                             
                  NULL AS MOD_USER_NO,      
                  NULL AS REQUESTER,                          
                  NULL AS REPORT_TAG,                             
                  NULL AS REPORT_DESC,
                  NULL AS PROMPT_YN,
                  AUTH_PUBLISH AS AUTH_PUBLISH             
              FROM               
                  USER_AUTH_REPORT_MSTR             
              INNER JOIN         
                  USER_MSTR ON USER_MSTR.USER_NO = USER_AUTH_REPORT_MSTR.USER_NO             
              INNER JOIN         
                  PUB_FLD_MSTR ON PUB_FLD_MSTR.FLD_ID = USER_AUTH_REPORT_MSTR.FLD_ID                             
              WHERE            
                  USER_MSTR.USER_ID = #{userId}   
                    AND AUTH_VIEW != 0
          )           
          UNION ALL           
          (
              SELECT DISTINCT  
                  PUB_FLD_MSTR.FLD_ID AS ID,                             
                  PUB_FLD_MSTR.FLD_NM AS TEXT,                             
                  PUB_FLD_MSTR.FLD_PARENT_ID AS UPPERID,                             
                  PUB_FLD_MSTR.FLD_ORDINAL AS ORDINAL,                             
                  NULL AS REPORT_TYPE,                      
                  'FOLDER' AS TYPE,                                              
                  NULL AS REG_DT,                             
                  NULL AS REG_USER_NO,                             
                  NULL AS MOD_DT,                             
                  NULL AS MOD_USER_NO,  
                  NULL AS REQUESTER,                                
                  NULL AS REPORT_TAG,                             
                  NULL AS REPORT_DESC,
                  NULL AS PROMPT_YN,
                  AUTH_PUBLISH AS AUTH_PUBLISH             
              FROM               
                  GRP_AUTH_REPORT_MSTR             
              INNER JOIN         
                  USER_MSTR ON USER_MSTR.GRP_ID = GRP_AUTH_REPORT_MSTR.GRP_ID             
              INNER JOIN         
                  PUB_FLD_MSTR ON PUB_FLD_MSTR.FLD_ID = GRP_AUTH_REPORT_MSTR.FLD_ID                             
              WHERE            
                  USER_MSTR.USER_ID = #{userId}                  
                    AND AUTH_VIEW != 0                            
          )           
          UNION ALL           
          (
              SELECT            
                  REPORT_MSTR.REPORT_ID AS ID,                             
                  REPORT_MSTR.REPORT_NM AS TEXT,                             
                  REPORT_MSTR.FLD_ID AS UPPERID,                             
                  REPORT_MSTR.REPORT_ORDINAL AS ORDINAL,                             
                  REPORT_MSTR.REPORT_TYPE AS REPORT_TYPE,                             
                  'REPORT' AS TYPE,                             
                  REPORT_MSTR.REG_DT AS REG_DT,                                                  
                  REPORT_MSTR.REG_USER_NO AS REG_USER_NO,             
                  REPORT_MSTR.MOD_DT AS MOD_DT,                             
                  REPORT_MSTR.MOD_USER_NO AS MOD_USER_NO,      
                  REPORT_MSTR.GRID_INFO AS REQUESTER,                          
                  REPORT_MSTR.REPORT_TAG AS REPORT_TAG,                             
                  TO_CHAR(REPORT_MSTR.REPORT_DESC) AS REPORT_DESC,
                  REPORT_MSTR.PROMPT_YN,
                  NULL AS AUTH_PUBLISH             
              FROM               
                  REPORT_MSTR             
              INNER JOIN         
                  PUB_FLD_MSTR ON REPORT_MSTR.FLD_ID = PUB_FLD_MSTR.FLD_ID             
              WHERE              
                  REPORT_MSTR.DEL_YN != 'Y'                                    
          )
      ) A
      LEFT JOIN USER_MSTR UM_REG ON UM_REG.USER_NO = A.REG_USER_NO
      LEFT JOIN USER_MSTR UM_MOD ON UM_MOD.USER_NO = A.MOD_USER_NO
      WHERE ID IN (SELECT REPORT_ID FROM REPORT_FAVORITES WHERE USER_NO = #{userNo})
      ORDER BY TYPE, UPPERID, ORDINAL, TEXT
    </select>

    <select id="selectPrivateReportList" resultMap="ReportList">
        SELECT 
          DISTINCT
            A.ID,
            A.TEXT,
            A.UPPERID,
            A.ORDINAL,
            A.REPORT_TYPE,
            A.TYPE,
            A.REQUESTER,
            A.REG_DT,
            UM_REG.USER_NM AS REG_USER_NM,
            A.MOD_DT,
            UM_MOD.USER_NM AS MOD_USER_NM,
            A.REPORT_TAG,
            A.REPORT_DESC,
            A.PROMPT_YN
        FROM (
            (
                SELECT DISTINCT 
                    USER_FLD_MSTR.FLD_ID AS ID,
                    USER_FLD_MSTR.FLD_NM AS TEXT,
                    USER_FLD_MSTR.FLD_PARENT_ID AS UPPERID,
                    USER_FLD_MSTR.FLD_ORDINAL AS ORDINAL,
                    NULL AS REPORT_TYPE,
                    'FOLDER' AS TYPE,
                    NULL AS REG_DT,
                    NULL AS REQUESTER,
                    NULL AS REG_USER_NO,
                    NULL AS MOD_DT,
                    NULL AS MOD_USER_NO,
                    NULL AS REPORT_TAG,
                    NULL AS REPORT_DESC,
                    NULL AS PROMPT_YN
                FROM   
                    USER_FLD_MSTR
                INNER JOIN 
                    USER_MSTR ON USER_MSTR.USER_NO = USER_FLD_MSTR.USER_NO
                WHERE  
                    USER_MSTR.USER_ID = #{userId}
            )
            UNION ALL
            (
                SELECT 
                    REPORT_MSTR.REPORT_ID AS ID,
                    REPORT_MSTR.REPORT_NM AS TEXT,
                    REPORT_MSTR.FLD_ID AS UPPERID,
                    REPORT_MSTR.REPORT_ORDINAL AS ORDINAL,
                    REPORT_MSTR.REPORT_TYPE AS REPORT_TYPE,
                    'REPORT' AS TYPE,
                    REPORT_MSTR.REG_DT AS REG_DT,
                    REPORT_MSTR.GRID_INFO AS REQUESTER,
                    REPORT_MSTR.REG_USER_NO AS REG_USER_NO,
                    REPORT_MSTR.MOD_DT AS MOD_DT,
                    REPORT_MSTR.MOD_USER_NO AS MOD_USER_NO,
                    REPORT_MSTR.REPORT_TAG AS REPORT_TAG,
                    TO_CHAR(REPORT_MSTR.REPORT_DESC) AS REPORT_DESC,
                    REPORT_MSTR.PROMPT_YN
                FROM   
                    REPORT_MSTR
                INNER JOIN 
                    USER_FLD_MSTR ON REPORT_MSTR.FLD_ID = USER_FLD_MSTR.FLD_ID
                WHERE  
                    REPORT_MSTR.DEL_YN != 'Y'
                    <if test="reportTypes != null">
                        AND REPORT_MSTR.REPORT_TYPE IN
                        <foreach collection="reportTypes" item="type" open="(" close=")" separator=",">
                            #{type}
                        </foreach>
                    </if>
                    AND REPORT_MSTR.FLD_TYPE = 'PRIVATE'
            )
        ) A
        LEFT JOIN USER_MSTR UM_REG ON UM_REG.USER_NO = A.REG_USER_NO  
        LEFT JOIN USER_MSTR UM_MOD ON UM_MOD.USER_NO = A.MOD_USER_NO  
        ORDER BY TYPE, UPPERID, ORDINAL, TEXT
    </select>

    <select id="selectPublicReportFolderList" resultType="com.wise.MarketingPlatForm.report.vo.FolderMasterVO">
      SELECT 
      FLD_ID AS fldId,
      FLD_NM AS fldNm,
      FLD_PARENT_ID AS fldParentId,
      FLD_ORDINAL AS fldOrdinal
      FROM PUB_FLD_MSTR
      WHERE PUB_FLD_MSTR.FLD_ID IN 
      <foreach item="fldId" collection="fldIdSet" open="(" separator="," close=")">
        #{fldId}
      </foreach>
    </select>

    <select id="selectPrivateReportFolderList" parameterType="int" resultType="com.wise.MarketingPlatForm.report.vo.FolderMasterVO">
      SELECT 
      FLD_ID AS fldId,
      FLD_NM AS fldNm,
      FLD_PARENT_ID AS fldParentId,
      FLD_ORDINAL AS fldOrdinal
      FROM USER_FLD_MSTR
      WHERE USER_NO = #{userNo}
    </select>

    <select id="selectePublishGrpAuthReportMstr" parameterType="int" resultType="com.wise.MarketingPlatForm.account.entity.GroupAuthReportMstrEntity">
      SELECT FLD_ID AS fldId
      FROM GRP_AUTH_REPORT_MSTR
      WHERE GRP_ID = #{grpId}
      <!-- AND AUTH_VIEW != 0 -->
      AND AUTH_PUBLISH != 0
    </select>

    <select id="selectePublishUserAuthReportMstr" parameterType="int" resultType="com.wise.MarketingPlatForm.account.entity.UserAuthReportMstrEntity">
      SELECT FLD_ID AS fldId
      FROM USER_AUTH_REPORT_MSTR
      WHERE USER_NO = #{userNo}
      <!-- AND AUTH_VIEW != 0 -->
      AND AUTH_PUBLISH != 0
    </select>

  
      <select id='selectLinkReportList' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportLinkMstrEntity">
		SELECT	
        A.REPORT_ID AS reportId,
        A.REPORT_NM AS reportNm,
        A.REPORT_TYPE AS reportType,
        A.LINK_REPORT_ID AS linkReportId,
        A.LINK_REPORT_NM AS linkReportNm,
        A.LINK_REPORT_TYPE AS linkReportType,
        A.LINK_PARAM_INFO AS linkParamInfo,
        A.LINK_FK_INFO AS linkFkInfo
		FROM REPORT_LINK_MSTR_NEW A
		WHERE A.REPORT_ID = #{id}
    </select>

    <select id='selectSubLinkReportList' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportLinkSubMstrEntity">
		SELECT	A.REPORT_ID AS reportId,
				A.LINK_REPORT_ID AS linkReportId,
				(SELECT REPORT_NM FROM REPORT_MSTR WHERE REPORT_ID = LINK_REPORT_ID) AS linkReportNm,
        A.LINK_SUB_ITEM AS linkSubItem,
				A.LINK_DATA_TYPE AS linkDataType,
				A.LINK_XML_PARAM AS linkXmlParam,
        A.LINK_XML_DATA As linkXmlData,
				A.LINK_REPORT_TYPE AS linkReportType
		FROM REPORT_LINK_SUB_MSTR A
		WHERE A.REPORT_ID = #{id}
    </select>

    <select id='selectLinkReportParam' parameterType="String" resultType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
    SELECT A.PARAM_XML as paramXml FROM REPORT_MSTR A
    WHERE 1=1
      <if test='reportId != null'>
        AND A.REPORT_ID = #{reportId}
      </if>
    </select>

  <insert id = "insertLinkReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportLinkMstrEntity">
    MERGE INTO REPORT_LINK_MSTR_NEW target
    USING (
      SELECT 
        #{reportId} AS REPORT_ID, 
        #{reportNm} AS REPORT_NM, 
        #{reportType} AS REPORT_TYPE, 
        #{linkReportId} AS LINK_REPORT_ID, 
        #{linkReportNm} AS LINK_REPORT_NM, 
        #{linkReportType} AS LINK_REPORT_TYPE, 
        #{linkParamInfo} AS LINK_PARAM_INFO, 
        #{linkFkInfo} AS LINK_FK_INFO
      FROM dual
    ) src
    ON (target.REPORT_ID = src.REPORT_ID AND target.LINK_REPORT_ID = src.LINK_REPORT_ID)
    WHEN MATCHED THEN
      UPDATE SET 
        target.REPORT_NM = src.REPORT_NM,
        target.REPORT_TYPE = src.REPORT_TYPE,
        target.LINK_REPORT_NM = src.LINK_REPORT_NM,
        target.LINK_REPORT_TYPE = src.LINK_REPORT_TYPE,
        target.LINK_PARAM_INFO = src.LINK_PARAM_INFO,
        target.LINK_FK_INFO = src.LINK_FK_INFO
    WHEN NOT MATCHED THEN
      INSERT (
        REPORT_ID, 
        REPORT_NM, 
        REPORT_TYPE, 
        LINK_REPORT_ID, 
        LINK_REPORT_NM, 
        LINK_REPORT_TYPE, 
        LINK_PARAM_INFO, 
        LINK_FK_INFO
      )
      VALUES (
        src.REPORT_ID,
        src.REPORT_NM,
        src.REPORT_TYPE,
        src.LINK_REPORT_ID,
        src.LINK_REPORT_NM,
        src.LINK_REPORT_TYPE,
        src.LINK_PARAM_INFO,
        src.LINK_FK_INFO
      )
  </insert>
    <!-- INSERT INTO REPORT_LINK_MSTR_NEW
      (
        REPORT_ID,
        REPORT_NM,
        REPORT_TYPE,
        LINK_REPORT_ID,
        LINK_REPORT_NM,
        LINK_REPORT_TYPE,
        LINK_PARAM_INFO,
        LINK_FK_INFO
      )
    VALUES
      (
        #{reportId},
        #{reportNm},
        #{reportType},
        #{linkReportId},
        #{linkReportNm},
        #{linkReportType},
        #{linkParamInfo},
        #{linkFkInfo}
      ) -->

  <insert id = "insertSubLinkReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportLinkSubMstrEntity">
    INSERT INTO REPORT_LINK_SUB_MSTR
      (
        SEQ,
        REPORT_ID,
        LINK_REPORT_ID,
        LINK_SUB_ITEM,
        LINK_DATA_TYPE,
        LINK_XML_PARAM,
        LINK_XML_DATA,
        LINK_REPORT_ORDINAL,
        LINK_REPORT_TYPE
      )
    VALUES
      (
        REPORT_LINK_SUB_MSTR_SEQ.NEXTVAL,
        #{reportId},
        #{linkReportId},
        #{linkSubItem},
        #{linkDataType},
        #{linkXmlParam},
        #{linkXmlData},
        #{linkReportOrdinal},
        #{linkReportType}
      )
  </insert>

	<insert id = "insertReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		<selectKey keyProperty="reportId" resultType="int" order="AFTER">
			SELECT MAX(REPORT_ID) FROM REPORT_MSTR
		</selectKey>
		INSERT INTO REPORT_MSTR
			(
				REPORT_ID,
				REPORT_NM,
				REPORT_SUB_TITLE,
				FLD_ID,
				FLD_TYPE,
				REPORT_ORDINAL,
				REPORT_TYPE,
				REPORT_DESC,
				PARAM_XML,
        REPORT_TAG,
				REG_USER_NO,
        GRID_INFO,
        PROMPT_YN,
        MAX_REPORT_PERIOD_YN,
				CHART_XML,
				LAYOUT_XML,
				REPORT_XML,
				DATASET_XML,
        DATASET_QUERY,
        REG_DT
			)
		VALUES
			(
				REPORT_MSTR_REPORT_ID_SEQ.NEXTVAL,
				#{reportNm},
				#{reportSubTitle},
				#{fldId},
				#{fldType},
				#{reportOrdinal},
				#{reportType},
				#{reportDesc},
				#{paramXml},
        #{reportTag},
				#{regUserNo},
        #{gridInfo},
        #{promptYn},
        #{maxReportPeriodYn},
				#{chartXml},
				#{layoutXml},
				#{reportXml},
				#{datasetXml},
        #{datasetQuery},
        SYSDATE
			)
	</insert>

	<update id = "updateReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		UPDATE REPORT_MSTR
		SET
			REPORT_NM = #{reportNm},
			REPORT_SUB_TITLE = #{reportSubTitle},
			FLD_ID = #{fldId},
			FLD_TYPE = #{fldType},
			REPORT_ORDINAL = #{reportOrdinal},
			REPORT_TYPE = #{reportType},
			REPORT_DESC = #{reportDesc},
			DATASET_XML = #{datasetXml},
			PARAM_XML = #{paramXml},
      REPORT_TAG = #{reportTag},
			MOD_USER_NO = #{modUserNo},
      GRID_INFO = #{gridInfo},
			REPORT_XML = #{reportXml},
			CHART_XML = #{chartXml},
			LAYOUT_XML = #{layoutXml},
      DATASET_QUERY = #{datasetQuery},
      MOD_DT = SYSDATE,
      PROMPT_YN = #{promptYn},
      MAX_REPORT_PERIOD_YN = #{maxReportPeriodYn}
		WHERE REPORT_ID = #{reportId}
	</update>

  <update id = "updateConfigReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity">
		UPDATE REPORT_MSTR
		SET
			REPORT_NM = #{reportNm},
			REPORT_SUB_TITLE = #{reportSubTitle},
			FLD_ID = #{fldId},
			FLD_TYPE = #{fldType},
			REPORT_ORDINAL = #{reportOrdinal},
			REPORT_TYPE = #{reportType},
			REPORT_DESC = #{reportDesc},
      REPORT_TAG = #{reportTag},
      PROMPT_YN = #{promptYn},
      MAX_REPORT_PERIOD_YN = #{maxReportPeriodYn}
		WHERE REPORT_ID = #{reportId}
	</update>

	<update id="deleteReport" parameterType="int">
		UPDATE REPORT_MSTR
		SET DEL_YN = 'Y'
		WHERE REPORT_ID = #{reportId}
	</update>

	<select id="checkDuplicatedReport" parameterType="com.wise.MarketingPlatForm.report.entity.ReportMstrEntity"
		resultType="hashmap">
		SELECT REPORT_NM
		FROM REPORT_MSTR
		WHERE REPORT_NM = #{reportNm}
		AND FLD_ID = #{fldId}
		AND DEL_YN = 'N'
	</select>

    <select id="selectDetailedDataItem" resultMap="DetailedDataItem">
      SELECT
          T.CUBE_ID AS CUBE_ID,
          T.ACT_ID AS ACT_ID,
          T.ACT_NM AS ACT_NM,
          T.UNI_NM AS UNI_NM,
          T.RTN_ITEM_UNI_NM AS RTN_ITEM_UNI_NM,
          T.ORDINAL AS ORDINAL,
          CASE
              WHEN EXISTS (
                  SELECT 1
                  FROM CUBE_HIE_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.HIE_UNI_NM
              ) OR EXISTS (
                  SELECT 1
                  FROM CUBE_MEA_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.MEA_UNI_NM
                  AND A.MEA_AGG IS NULL
              ) THEN 'dimension'
              WHEN EXISTS (
                  SELECT 1
                  FROM CUBE_MEA_MSTR A
                  WHERE A.CUBE_ID = T.CUBE_ID
                  AND T.RTN_ITEM_UNI_NM = A.MEA_UNI_NM
                  AND A.MEA_AGG IS NOT NULL
              ) THEN 'measure'
              ELSE NULL
          END AS TYPE
      FROM (
          SELECT
              X.CUBE_ID,
              X.ACT_ID,
              X.ACT_NM,
              Y.UNI_NM,
              Y.RTN_ITEM_UNI_NM,
              Y.ORDINAL
          FROM
              CUBE_ACT_MSTR X
          INNER JOIN CUBE_ACT_RTN_ITEM Y
              ON X.CUBE_ID = Y.CUBE_ID
              AND X.ACT_ID = Y.ACT_ID
          WHERE
              X.CUBE_ID = #{cubeId}
              AND X.ACT_ID = #{actId}
      ) T
      ORDER BY
          T.ORDINAL
    </select>

    <insert id="insertUserUpload" parameterType="com.wise.MarketingPlatForm.dataset.entity.UserUploadMstrEntity">
        INSERT INTO USER_UPLOAD_MSTR(    
				 DATA_SEQ
				,DATA_NM                    
				,TBL_NM         
				,REG_USER_NO
				,DATA_DESC                
				,UPLOAD_XML
				,REG_DT 
				,UPD_DT
				,DS_ID               
			 ) VALUES (
				 USER_DATA_FILE_MSTR_DATA_SEQ.NEXTVAL
				,#{dataNm}                 
				,#{tableNm}    
				,#{regUserNo}  
				,#{dataDesc}              
				,#{uploadXml} 
				,SYSDATE
				,SYSDATE
				,#{dsId}
			 )
    </insert>

    <select id='selectReportName' resultType='string'>
      SELECT REPORT_NM FROM REPORT_MSTR WHERE REPORT_ID = #{reportId}
    </select>

    <select id='selectDwReportChk' resultType='com.wise.MarketingPlatForm.report.entity.DwReportChkEntity'>
      SELECT
      STD_DATE as stdDate,
      CHK_GB as chkGb,
      REPORT_ID as reportId,
      CHK_PROG as chkProg,
      SOURCE_DB as sourceDb,
      COMPARE_DB as compareDb,
      USER_NM as userNm,
      INSERT_DATE as insertDate,
      ERR_DESC as errDesc
      FROM DW_REPORT_CHK
      WHERE TO_CHAR(STD_DATE, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
      AND CHK_GB IN ('1', '2')
      AND REPORT_ID = #{reportId}
    </select>

    <!-- 즐겨찾기 추가 -->
    <insert id="insertReportFavorite" parameterType="com.wise.MarketingPlatForm.report.entity.ReportFavoritesEntity">
        INSERT INTO REPORT_FAVORITES (favorite_id, user_no, report_id, created_at, fld_type)
        VALUES (REPORT_FAVORITES_FAVORITE_ID_SEQ.NEXTVAL, #{userNo}, #{reportId}, CURRENT_TIMESTAMP, #{fldType})
    </insert>

    <!-- 사용자별 즐겨찾기 목록 조회 -->
    <select id="selectFavoritesByUserId" parameterType="int" resultType="com.wise.MarketingPlatForm.report.entity.ReportFavoritesEntity">
        SELECT 
        FAVORITE_ID as favoriteId,
        USER_NO as userNo,
        REPORT_ID as reportId,
        CREATED_AT as createdAt,
        FLD_TYPE as fldType
        FROM REPORT_FAVORITES WHERE user_no = #{userNo}
    </select>

    <!-- 즐겨찾기 삭제 -->
    <delete id="deleteFavorite" parameterType="com.wise.MarketingPlatForm.report.entity.ReportFavoritesEntity">
        DELETE FROM REPORT_FAVORITES WHERE user_no = #{userNo} AND report_id = #{reportId}
    </delete>
</mapper>
